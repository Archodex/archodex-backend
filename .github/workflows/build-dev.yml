name: Build Server Development Container Images

on:
  workflow_dispatch: {}
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  ACT: false
  AWS_PAGER: ''
  OCI_REPO: ''

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup package repos
        run: |-
          sudo tee /etc/dpkg/dpkg.cfg.d/01_nodoc > /dev/null << 'EOF'
          path-exclude /usr/share/doc/*
          path-exclude /usr/share/man/*
          path-exclude /usr/share/info/*
          EOF

          sudo apt-get update

      - name: Install development tools
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: g++-aarch64-linux-gnu gcc-aarch64-linux-gnu libc6-dev-arm64-cross mold protobuf-compiler

      - name: Setup linkers
        run: |-
          # <arch>-linux-gnu-gcc expects the mold linker to be at /usr/bin/<arch>-linux-gnu-ld.mold
          sudo ln -sf /usr/bin/ld.mold /usr/bin/x86_64-linux-gnu-ld.mold
          sudo ln -sf /usr/bin/ld.mold /usr/bin/aarch64-linux-gnu-ld.mold

      - name: Install Rust toolchains
        uses: moonrepo/setup-rust@v1
        with:
          targets: x86_64-unknown-linux-gnu,aarch64-unknown-linux-gnu
          cache-target: target
          target-dirs: .

      - name: Build Server package
        run: |-
          cargo build \
            --release \
            --target x86_64-unknown-linux-gnu \
            --target aarch64-unknown-linux-gnu \
            --package server

      - name: Container metadata
        if: env.ACT != 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: type=ref,event=branch,prefix=branch-

      - name: Log in to the GitHub Container Registry
        if: env.ACT != 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Calculate OCI image repo
        id: repo
        run: echo "OCI_REPO=ghcr.io/${GITHUB_REPOSITORY@L}" >> $GITHUB_ENV

      - name: Build and push container images
        id: build-images
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: |-
            ${{
              github.ref == 'refs/heads/main' && env.OCI_REPO ||
              steps.meta.outputs.tags
            }}
          labels: ${{ env.ACT != 'true' && steps.meta.outputs.labels }}
          push: ${{ env.ACT != 'true' }}
