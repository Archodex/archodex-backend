AWSTemplateFormatVersion: "2010-09-09"
Transform:
  - AWS::LanguageExtensions
  - AWS::Serverless-2016-10-31

Parameters:
  EnvironmentOrganizationPath:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Organizational path for the environment
    Default: /environment_organization_path
  CustomerDataOUId:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Organizational Unit ID for customer data accounts
    Default: /customer_data_ou_id
  CustomerDataRegions:
    Type: AWS::SSM::Parameter::Value<List<String>>
    Description: Regions where customer accounts may be provisioned
    Default: /customer_data_regions
  Domain:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Archodex environment domain name
    Default: /account_subdomain/domain
  APIBootstrapMD5Sum:
    Type: String
    Description: MD5 checksum of the Lambda API function zip package

Mappings:
  Constants:
    Auth:
      RefreshTokenValidityInDays: 1

Conditions:
  IsProd:
    Fn::Equals:
      - !Ref Domain
      - archodex.com

Resources:
  AuthDomainSESFeedbackRecords:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: "{{resolve:ssm:/account_subdomain/hosted_zone_id}}"
      RecordSets:
        - Name: mail.auth.{{resolve:ssm:/account_subdomain/domain}}
          ResourceRecords:
            - !Sub 10 feedback-smtp.${AWS::Region}.amazonses.com
          TTL: 300
          Type: MX
        - Name: mail.auth.{{resolve:ssm:/account_subdomain/domain}}
          ResourceRecords:
            - '"v=spf1 include:amazonses.com ~all"'
          TTL: 300
          Type: TXT

  AuthDomainSESIdentity:
    Type: AWS::SES::EmailIdentity
    Properties:
      EmailIdentity: auth.{{resolve:ssm:/account_subdomain/domain}}
      MailFromAttributes:
        MailFromDomain: mail.auth.{{resolve:ssm:/account_subdomain/domain}}

  AuthDomainSESIdentityVerificationRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: "{{resolve:ssm:/account_subdomain/hosted_zone_id}}"
      RecordSets:
        - Name: !GetAtt AuthDomainSESIdentity.DkimDNSTokenName1
          Type: CNAME
          TTL: 300
          ResourceRecords:
            - !GetAtt AuthDomainSESIdentity.DkimDNSTokenValue1
        - Name: !GetAtt AuthDomainSESIdentity.DkimDNSTokenName2
          Type: CNAME
          TTL: 300
          ResourceRecords:
            - !GetAtt AuthDomainSESIdentity.DkimDNSTokenValue2
        - Name: !GetAtt AuthDomainSESIdentity.DkimDNSTokenName3
          Type: CNAME
          TTL: 300
          ResourceRecords:
            - !GetAtt AuthDomainSESIdentity.DkimDNSTokenValue3
        - Name: !Sub _dmarc.auth.{{resolve:ssm:/account_subdomain/domain}}
          Type: TXT
          TTL: 300
          ResourceRecords:
            - '"v=DMARC1; p=reject;"'

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      AutoVerifiedAttributes:
        - email
      DeletionProtection: ACTIVE
      EmailConfiguration:
        EmailSendingAccount: DEVELOPER
        From: !Sub Archodex Authentication <noreply@${AuthDomainSESIdentity}>
        SourceArn: !Sub arn:${AWS::Partition}:ses:${AWS::Region}:${AWS::AccountId}:identity/${AuthDomainSESIdentity}
      EnabledMfas:
        - SOFTWARE_TOKEN_MFA
      LambdaConfig:
        CustomMessage: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${AWS::StackName}-cognito-custom-message
      MfaConfiguration: OPTIONAL
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireNumbers: false
          RequireUppercase: false
          RequireLowercase: false
          RequireSymbols: false
        SignInPolicy:
          AllowedFirstAuthFactors:
            - PASSWORD
            - WEB_AUTHN
      Schema:
        - AttributeDataType: Number
          Mutable: true
          Name: account_id
          NumberAttributeConstraints:
            MaxValue: 9999999999
            MinValue: 1000000000
        - AttributeDataType: String
          Name: endpoint
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: false
      UserAttributeUpdateSettings:
        AttributesRequireVerificationBeforeUpdate:
          - email
      UserPoolName: archodex
      UserPoolTier: ESSENTIALS
      WebAuthnUserVerification: required

  CognitoUserPoolAppClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AllowedOAuthFlows:
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - openid
        - profile
      CallbackURLs:
        - !Sub https://api.${AWS::Region}.{{resolve:ssm:/account_subdomain/domain}}/oauth2/idpresponse
        - !Sub https://app.{{resolve:ssm:/account_subdomain/domain}}/oauth2/passkeyresponse
        - !If
          - IsProd
          - !Ref AWS::NoValue
          - http://localhost:5731/oauth2/idpresponse
        - !If
          - IsProd
          - !Ref AWS::NoValue
          - http://localhost:5173/oauth2/passkeyresponse
      ClientName: app
      DefaultRedirectURI: !Sub https://api.${AWS::Region}.{{resolve:ssm:/account_subdomain/domain}}/oauth2/idpresponse
      ExplicitAuthFlows:
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_AUTH
      PreventUserExistenceErrors: ENABLED
      ReadAttributes:
        - custom:endpoint
      RefreshTokenValidity: !FindInMap
        - Constants
        - Auth
        - RefreshTokenValidityInDays
      SupportedIdentityProviders:
        - COGNITO
      UserPoolId: !Ref CognitoUserPool
      WriteAttributes:
        - email

  CognitoCustomMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - arm64
      Description: Custom message trigger for Cognito User Pool
      FunctionName: !Sub ${AWS::StackName}-cognito-custom-message
      Handler: index.handler
      InlineCode: |-
        module.exports.handler = async event => {
          console.log(`Input: ${JSON.stringify(event, null, 2)}`);

          if (event.triggerSource === 'CustomMessage_SignUp' || event.triggerSource === 'CustomMessage_ResendCode') {
            event.response.emailSubject = 'Archodex Email Verification';

            const confirmUrl = `https://auth.{{resolve:ssm:/account_subdomain/domain}}/confirmUser?client_id=${event.callerContext.clientId}&user_name=${event.userName}&confirmation_code=${event.request.codeParameter}`;

            event.response.emailMessage = `
            <!DOCTYPE html
              PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
            <html dir="ltr" xmlns="http://www.w3.org/1999/xhtml" xmlns:o="urn:schemas-microsoft-com:office:office" lang="en">

            <head>
              <meta charset="UTF-8">
              <meta content="width=device-width, initial-scale=1" name="viewport">
              <meta name="x-apple-disable-message-reformatting">
              <meta http-equiv="X-UA-Compatible" content="IE=edge">
              <meta content="telephone=no" name="format-detection">
              <title>Archodex Email Verification</title>
              <!--[if (mso 16)]><style type="text/css"> a {text-decoration: none;}  </style><![endif]--><!--[if gte mso 9]><style>sup { font-size: 100% !important; }</style><![endif]--><!--[if gte mso 9]><noscript> <xml> <o:OfficeDocumentSettings> <o:AllowPNG></o:AllowPNG> <o:PixelsPerInch>96</o:PixelsPerInch> </o:OfficeDocumentSettings> </xml> </noscript>
                <![endif]--><!--[if mso]><xml> <w:WordDocument xmlns:w="urn:schemas-microsoft-com:office:word"> <w:DontUseAdvancedTypographyReadingMail/> </w:WordDocument> </xml>
                <![endif]-->
              <style type="text/css">
                .rollover:hover .rollover-first {
                  max-height: 0px !important;
                  display: none !important;
                }

                .rollover:hover .rollover-second {
                  max-height: none !important;
                  display: block !important;
                }

                .rollover span {
                  font-size: 0px;
                }

                u+.body img~div div {
                  display: none;
                }

                #outlook a {
                  padding: 0;
                }

                span.MsoHyperlink,
                span.MsoHyperlinkFollowed {
                  color: inherit;
                  mso-style-priority: 99;
                }

                a.es-button {
                  mso-style-priority: 100 !important;
                  text-decoration: none !important;
                }

                a[x-apple-data-detectors],
                #MessageViewBody a {
                  color: inherit !important;
                  text-decoration: none !important;
                  font-size: inherit !important;
                  font-family: inherit !important;
                  font-weight: inherit !important;
                  line-height: inherit !important;
                }

                .es-desk-hidden {
                  display: none;
                  float: left;
                  overflow: hidden;
                  width: 0;
                  max-height: 0;
                  line-height: 0;
                  mso-hide: all;
                }

                @media only screen and (max-width:600px) {
                  .es-m-p0r {
                    padding-right: 0px !important
                  }

                  .es-m-p0l {
                    padding-left: 0px !important
                  }

                  .es-p-default {}

                  *[class="gmail-fix"] {
                    display: none !important
                  }

                  p,
                  a {
                    line-height: 150% !important
                  }

                  h1,
                  h1 a {
                    line-height: 120% !important
                  }

                  h2,
                  h2 a {
                    line-height: 120% !important
                  }

                  h3,
                  h3 a {
                    line-height: 120% !important
                  }

                  h4,
                  h4 a {
                    line-height: 120% !important
                  }

                  h5,
                  h5 a {
                    line-height: 120% !important
                  }

                  h6,
                  h6 a {
                    line-height: 120% !important
                  }

                  .es-header-body p {}

                  .es-content-body p {}

                  .es-footer-body p {}

                  .es-infoblock p {}

                  h1 {
                    font-size: 36px !important;
                    text-align: left
                  }

                  h2 {
                    font-size: 26px !important;
                    text-align: left
                  }

                  h3 {
                    font-size: 20px !important;
                    text-align: left
                  }

                  h4 {
                    font-size: 24px !important;
                    text-align: left
                  }

                  h5 {
                    font-size: 20px !important;
                    text-align: left
                  }

                  h6 {
                    font-size: 16px !important;
                    text-align: left
                  }

                  .es-header-body h1 a,
                  .es-content-body h1 a,
                  .es-footer-body h1 a {
                    font-size: 36px !important
                  }

                  .es-header-body h2 a,
                  .es-content-body h2 a,
                  .es-footer-body h2 a {
                    font-size: 26px !important
                  }

                  .es-header-body h3 a,
                  .es-content-body h3 a,
                  .es-footer-body h3 a {
                    font-size: 20px !important
                  }

                  .es-header-body h4 a,
                  .es-content-body h4 a,
                  .es-footer-body h4 a {
                    font-size: 24px !important
                  }

                  .es-header-body h5 a,
                  .es-content-body h5 a,
                  .es-footer-body h5 a {
                    font-size: 20px !important
                  }

                  .es-header-body h6 a,
                  .es-content-body h6 a,
                  .es-footer-body h6 a {
                    font-size: 16px !important
                  }

                  .es-menu td a {
                    font-size: 12px !important
                  }

                  .es-header-body p,
                  .es-header-body a {
                    font-size: 14px !important
                  }

                  .es-content-body p,
                  .es-content-body a {
                    font-size: 16px !important
                  }

                  .es-footer-body p,
                  .es-footer-body a {
                    font-size: 14px !important
                  }

                  .es-infoblock p,
                  .es-infoblock a {
                    font-size: 12px !important
                  }

                  .es-m-txt-c,
                  .es-m-txt-c h1,
                  .es-m-txt-c h2,
                  .es-m-txt-c h3,
                  .es-m-txt-c h4,
                  .es-m-txt-c h5,
                  .es-m-txt-c h6 {
                    text-align: center !important
                  }

                  .es-m-txt-r,
                  .es-m-txt-r h1,
                  .es-m-txt-r h2,
                  .es-m-txt-r h3,
                  .es-m-txt-r h4,
                  .es-m-txt-r h5,
                  .es-m-txt-r h6 {
                    text-align: right !important
                  }

                  .es-m-txt-j,
                  .es-m-txt-j h1,
                  .es-m-txt-j h2,
                  .es-m-txt-j h3,
                  .es-m-txt-j h4,
                  .es-m-txt-j h5,
                  .es-m-txt-j h6 {
                    text-align: justify !important
                  }

                  .es-m-txt-l,
                  .es-m-txt-l h1,
                  .es-m-txt-l h2,
                  .es-m-txt-l h3,
                  .es-m-txt-l h4,
                  .es-m-txt-l h5,
                  .es-m-txt-l h6 {
                    text-align: left !important
                  }

                  .es-m-txt-r img,
                  .es-m-txt-c img,
                  .es-m-txt-l img {
                    display: inline !important
                  }

                  .es-m-txt-r .rollover:hover .rollover-second,
                  .es-m-txt-c .rollover:hover .rollover-second,
                  .es-m-txt-l .rollover:hover .rollover-second {
                    display: inline !important
                  }

                  .es-m-txt-r .rollover span,
                  .es-m-txt-c .rollover span,
                  .es-m-txt-l .rollover span {
                    line-height: 0 !important;
                    font-size: 0 !important;
                    display: block
                  }

                  .es-spacer {
                    display: inline-table
                  }

                  a.es-button,
                  button.es-button {
                    font-size: 20px !important;
                    padding: 10px 20px 10px 20px !important;
                    line-height: 120% !important
                  }

                  a.es-button,
                  button.es-button,
                  .es-button-border {
                    display: inline-block !important
                  }

                  .es-m-fw,
                  .es-m-fw.es-fw,
                  .es-m-fw .es-button {
                    display: block !important
                  }

                  .es-m-il,
                  .es-m-il .es-button,
                  .es-social,
                  .es-social td,
                  .es-menu {
                    display: inline-block !important
                  }

                  .es-adaptive table,
                  .es-left,
                  .es-right {
                    width: 100% !important
                  }

                  .es-content table,
                  .es-header table,
                  .es-footer table,
                  .es-content,
                  .es-footer,
                  .es-header {
                    width: 100% !important;
                    max-width: 600px !important
                  }

                  .adapt-img {
                    width: 100% !important;
                    height: auto !important
                  }

                  .es-mobile-hidden,
                  .es-hidden {
                    display: none !important
                  }

                  .es-desk-hidden {
                    width: auto !important;
                    overflow: visible !important;
                    float: none !important;
                    max-height: inherit !important;
                    line-height: inherit !important
                  }

                  tr.es-desk-hidden {
                    display: table-row !important
                  }

                  table.es-desk-hidden {
                    display: table !important
                  }

                  td.es-desk-menu-hidden {
                    display: table-cell !important
                  }

                  .es-menu td {
                    width: 1% !important
                  }

                  table.es-table-not-adapt,
                  .esd-block-html table {
                    width: auto !important
                  }

                  .h-auto {
                    height: auto !important
                  }

                  .img-9409 {
                    width: 200px !important;
                    height: auto !important
                  }

                  .es-text-2982 .es-text-mobile-size-10,
                  .es-text-2982 .es-text-mobile-size-10 * {
                    font-size: 10px !important;
                    line-height: 150% !important
                  }
                }

                @media screen and (max-width:384px) {
                  .mail-message-content {
                    width: 414px !important
                  }
                }
              </style>
            </head>

            <body class="body"
              style="width:100%;height:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;padding:0;Margin:0">
              <div dir="ltr" class="es-wrapper-color" lang="en" style="background-color:#FAFAFA">
                <!--[if gte mso 9]><v:background xmlns:v="urn:schemas-microsoft-com:vml" fill="t"> <v:fill type="tile" color="#fafafa"></v:fill> </v:background><![endif]-->
                <table width="100%" cellspacing="0" cellpadding="0" class="es-wrapper" role="none"
                  style="mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;padding:0;Margin:0;width:100%;height:100%;background-repeat:repeat;background-position:center top;background-color:#FAFAFA">
                  <tr>
                    <td valign="top" style="padding:0;Margin:0">
                      <table cellpadding="0" cellspacing="0" align="center" class="es-header" role="none"
                        style="mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;width:100%;table-layout:fixed !important;background-color:transparent;background-repeat:repeat;background-position:center top">
                        <tr>
                          <td align="center" style="padding:0;Margin:0">
                            <table bgcolor="#ffffff" align="center" cellpadding="0" cellspacing="0" class="es-header-body"
                              role="none"
                              style="mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-color:transparent;width:600px">
                              <tr>
                                <td align="left"
                                  style="Margin:0;padding-top:10px;padding-right:20px;padding-bottom:10px;padding-left:20px">
                                  <table cellpadding="0" cellspacing="0" width="100%" role="none"
                                    style="mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px">
                                    <tr>
                                      <td valign="top" align="center" class="es-m-p0r" style="padding:0;Margin:0;width:560px">
                                        <table cellpadding="0" cellspacing="0" width="100%" role="presentation"
                                          style="mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px">
                                          <tr>
                                            <td align="left"
                                              style="padding:0;Margin:0;padding-top:20px;padding-bottom:20px;font-size:0px"><img
                                                src="https://app.{{resolve:ssm:/account_subdomain/domain}}/logo-horizontal-coral.png"
                                                alt="Archodex" width="200" title="Archodex" class="img-9409"
                                                style="display:block;font-size:12px;border:0;outline:none;text-decoration:none"
                                                height="30"></td>
                                          </tr>
                                        </table>
                                      </td>
                                    </tr>
                                  </table>
                                </td>
                              </tr>
                            </table>
                          </td>
                        </tr>
                      </table>
                      <table cellpadding="0" cellspacing="0" align="center" class="es-content" role="none"
                        style="mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;width:100%;table-layout:fixed !important">
                        <tr>
                          <td align="center" style="padding:0;Margin:0">
                            <table bgcolor="#ffffff" align="center" cellpadding="0" cellspacing="0" class="es-content-body"
                              role="none"
                              style="mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px;background-color:#FFFFFF;width:600px">
                              <tr>
                                <td align="left"
                                  style="Margin:0;padding-right:20px;padding-left:20px;padding-top:30px;padding-bottom:30px">
                                  <table cellpadding="0" cellspacing="0" width="100%" role="none"
                                    style="mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px">
                                    <tr>
                                      <td align="center" valign="top" style="padding:0;Margin:0;width:560px">
                                        <table cellpadding="0" cellspacing="0" width="100%" role="presentation"
                                          style="mso-table-lspace:0pt;mso-table-rspace:0pt;border-collapse:collapse;border-spacing:0px">
                                          <tr>
                                            <td align="left" class="es-m-p0r es-m-p0l"
                                              style="Margin:0;padding-top:5px;padding-right:40px;padding-bottom:20px;padding-left:40px">
                                              <p
                                                style="Margin:0;mso-line-height-rule:exactly;font-family:arial, 'helvetica neue', helvetica, sans-serif;line-height:21px;letter-spacing:0;color:#333333;font-size:14px">
                                                Hi,<br>
                                                <br>
                                                Thanks for signing up for Archodex, your DevSecOps safety net. Please verify your email to continue. You may either click the button below or copy and paste the following code into the verification form:<br>
                                                <br>
                                                ${event.request.codeParameter}
                                              </p>
                                            </td>
                                          </tr>
                                          <tr>
                                            <td align="center" style="padding:0;Margin:0;padding-top:10px;padding-bottom:10px"><span
                                                class="es-button-border"
                                                style="background:#ee847b;display:inline-block;width:auto"><a href="${confirmUrl}"
                                                  target="_blank" class="es-button"
                                                  style="mso-style-priority:100 !important;text-decoration:none !important;mso-line-height-rule:exactly;color:#FFFFFF;font-size:20px;padding:10px 30px 10px 30px;display:inline-block;background:#ee847b;border-radius:6px;font-family:arial, 'helvetica neue', helvetica, sans-serif;font-weight:normal;font-style:normal;line-height:24px;width:auto;text-align:center;letter-spacing:0;mso-padding-alt:0;mso-border-alt:10px solid #ee847b;padding-left:30px;padding-right:30px">Verify
                                                  Your Email</a>
                                              </span></td>
                                          </tr>
                                          <tr>
                                            <td align="center" class="es-text-2982"
                                              style="padding:0;Margin:0;padding-top:20px;padding-bottom:5px">
                                              <p class="es-text-mobile-size-10"
                                                style="Margin:0;mso-line-height-rule:exactly;font-family:arial, 'helvetica neue', helvetica, sans-serif;line-height:15px;letter-spacing:0;color:#777;font-size:10px">
                                                If you did not register with us, please disregard this email.</p>
                                            </td>
                                          </tr>
                                        </table>
                                      </td>
                                    </tr>
                                  </table>
                                </td>
                              </tr>
                            </table>
                          </td>
                        </tr>
                      </table>
                    </td>
                  </tr>
                </table>
              </div>
            </body>

            </html>
            `;
          }

          console.log(`Output: ${JSON.stringify(event, null, 2)}`);

          return event;
        };
      Runtime: nodejs22.x

  CognitoCustomMessageFunctionLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${CognitoCustomMessageFunction}

  # SAM has a bug that prevents using 'Cognito' events with newer user pools. We have to manually create the permission.
  CognitoCustomMessageFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt CognitoCustomMessageFunction.Arn
      Principal: !Sub cognito-idp.${AWS::URLSuffix}
      SourceArn: !GetAtt CognitoUserPool.Arn

  CognitoUserPoolManagedLoginBranding:
    Type: AWS::Cognito::ManagedLoginBranding
    Properties:
      ClientId: !Ref CognitoUserPoolAppClient
      Settings:
        categories:
          global:
            colorSchemeMode: DYNAMIC
            spacingDensity: CONDENSED
      UserPoolId: !Ref CognitoUserPool

  USEast1StackSetExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ArchodexBackendUSEast1StackSetExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref AWS::AccountId
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CrossRegionParameterCustomResourcesAdministratorAccess
      Policies:
        - PolicyName: ManageStacks
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:CancelUpdateStack
                  - cloudformation:ContinueUpdateRollback
                  - cloudformation:CreateChangeSet
                  - cloudformation:CreateStack
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:RollbackStack
                  - cloudformation:TagResource
                  - cloudformation:UntagResource
                  - cloudformation:UpdateStack
                Resource: !Sub arn:${AWS::Partition}:cloudformation:*:${AWS::AccountId}:stack/StackSet-${AWS::StackName}-us-east-1-*
        - PolicyName: ReadCrossRegionParameterCustomResourceTokenParameter
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: ssm:GetParameters
                Resource: !Sub arn:${AWS::Partition}:ssm:*:${AWS::AccountId}:parameter/cross_region_parameter_custom_resource_service_token
        - PolicyName: ManageACMCertificates
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - acm:AddTagsToCertificate
                  - acm:DeleteCertificate
                  - acm:DescribeCertificate
                  - acm:ListTagsForCertificate
                  - acm:RemoveTagsFromCertificate
                  - acm:RequestCertificate
                  - acm:UpdateCertificateOptions
                Resource: "*"
                Condition:
                  ForAllValues:StringEquals:
                    acm:DomainNames:
                      - app.{{resolve:ssm:/account_subdomain/domain}}
                      - auth.{{resolve:ssm:/account_subdomain/domain}}
        - PolicyName: ManageACMRoute53Records
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - route53:ChangeResourceRecordSets
                Resource: !Sub arn:${AWS::Partition}:route53:::hostedzone/{{resolve:ssm:/account_subdomain/hosted_zone_id}}
                Condition:
                  ForAllValues:StringLike:
                    route53:ResourceRecordSet:
                      - "*.app.{{resolve:ssm:/account_subdomain/domain}}"
                      - "*.auth.{{resolve:ssm:/account_subdomain/domain}}"
                  ForAllValues:StringEquals:
                    route53:ResourceRecordSetType: CNAME

  USEast1StackSetAdministrationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ArchodexBackendUSEast1StackSetAdministrationRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub cloudformation.${AWS::URLSuffix}
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
              StringLike:
                aws:SourceArn: !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stackset/${AWS::StackName}-us-east-1:*
      Policies:
        - PolicyName: ExecuteStackSet
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: sts:AssumeRole
                Resource: !GetAtt USEast1StackSetExecutionRole.Arn

  CrossRegionArchodexEnvironmentStacks:
    Type: AWS::CloudFormation::StackSet
    Properties:
      AdministrationRoleARN: !GetAtt USEast1StackSetAdministrationRole.Arn
      ExecutionRoleName: !Ref USEast1StackSetExecutionRole
      ManagedExecution:
        Active: true
      OperationPreferences:
        FailureToleranceCount: 0
        MaxConcurrentCount: 1
        RegionConcurrencyType: PARALLEL
      Parameters:
        - ParameterKey: ParentStackName
          ParameterValue: !Ref AWS::StackName
        - ParameterKey: ParentStackRegion
          ParameterValue: !Ref AWS::Region
        - ParameterKey: Domain
          ParameterValue: "{{resolve:ssm:/account_subdomain/domain}}"
        - ParameterKey: HostedZoneId
          ParameterValue: "{{resolve:ssm:/account_subdomain/hosted_zone_id}}"
      PermissionModel: SELF_MANAGED
      StackInstancesGroup:
        - DeploymentTargets:
            Accounts:
              - !Ref AWS::AccountId
          Regions:
            - us-east-1
      StackSetName: !Sub ${AWS::StackName}-us-east-1
      TemplateBody: |-
        Parameters:
          ParentStackName:
            Type: String
            Description: Parent stack name
          ParentStackRegion:
            Type: String
            Description: Parent stack region
          Domain:
            Type: String
            Description: Archodex environment domain name
          HostedZoneId:
            Type: String
            Description: Archodex environment Route53 Hosted Zone ID

        Resources:
          CognitoDomainCertificate:
            Type: AWS::CertificateManager::Certificate
            Properties:
              DomainName: !Sub auth.${Domain}
              ValidationMethod: DNS
              DomainValidationOptions:
                - DomainName: !Sub auth.${Domain}
                  HostedZoneId: !Ref HostedZoneId

          CognitoDomainCertificateParameter:
            Type: Custom::CrossRegionSSMParameter
            Properties:
              # Use unicode character escape to prevent parent stack dynamic referencing
              ServiceToken: "{\u007Bresolve:ssm:/cross_region_parameter_custom_resource_service_token}}"
              ServiceTimeout: 10
              Region: !Ref ParentStackRegion
              Description: Archodex Cognito Domain us-east-1 ACM Certificate ARN
              Name: !Sub /${ParentStackName}/cognito_domain_certificate
              Type: String
              Value: !Ref CognitoDomainCertificate

          FrontendDomainCertificate:
            Type: AWS::CertificateManager::Certificate
            Properties:
              DomainName: !Sub app.${Domain}
              ValidationMethod: DNS
              DomainValidationOptions:
                - DomainName: !Sub app.${Domain}
                  HostedZoneId: !Ref HostedZoneId
          
          FrontendDomainCertificateParameter:
            Type: Custom::CrossRegionSSMParameter
            Properties:
              # Use unicode character escape to prevent parent stack dynamic referencing
              ServiceToken: "{\u007Bresolve:ssm:/cross_region_parameter_custom_resource_service_token}}"
              ServiceTimeout: 10
              Region: !Ref ParentStackRegion
              Description: Archodex Frontend Domain us-east-1 ACM Certificate ARN
              Name: !Sub /${ParentStackName}/frontend_domain_certificate
              Type: String
              Value: !Ref FrontendDomainCertificate

  CognitoDomainCertificateParameterValue:
    DependsOn: CrossRegionArchodexEnvironmentStacks
    Type: Custom::ParameterValue
    Properties:
      ServiceToken: "{{resolve:ssm:/parameter_value_custom_resource_service_token}}"
      ServiceTimeout: 5
      ParameterName: !Sub /${AWS::StackName}/cognito_domain_certificate

  CognitoUserPoolDomain:
    DependsOn: CrossRegionArchodexEnvironmentStacks
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      CustomDomainConfig:
        CertificateArn: !Ref CognitoDomainCertificateParameterValue
      Domain: auth.{{resolve:ssm:/account_subdomain/domain}}
      ManagedLoginVersion: 2
      UserPoolId: !Ref CognitoUserPool

  CognitoUserPoolDomainDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: "{{resolve:ssm:/account_subdomain/hosted_zone_id}}"
      Name: auth.{{resolve:ssm:/account_subdomain/domain}}
      Type: CNAME
      TTL: 300
      ResourceRecords:
        - !GetAtt CognitoUserPoolDomain.CloudFrontDistribution

  AccountsGlobalTable:
    Type: AWS::DynamoDB::GlobalTable
    Properties:
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: B
        - AttributeName: sk
          AttributeType: B
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      Replicas:
        - DeletionProtectionEnabled: true
          PointInTimeRecoverySpecification:
            PointInTimeRecoveryEnabled: true
          Region: !Ref AWS::Region
          SSESpecification:
            KMSMasterKeyId: alias/ArchodexBackendCustomerDataKey
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: archodex-accounts

  AccountsReplicaTableCustomResourceHandler:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - arm64
      Description: Cloudformation Custom Resource handler for managing regional replicas of the accounts global table
      Environment:
        Variables:
          ACCOUNTS_GLOBAL_TABLE_NAME: !Ref AccountsGlobalTable
      FunctionName: !Sub ${AWS::StackName}-accounts-replica-table-custom-resource-handler
      Handler: index.handler
      InlineCode: |-
        const { DynamoDBClient, UpdateTableCommand } = require('@aws-sdk/client-dynamodb');
        const https = require('https');

        const client = new DynamoDBClient();

        const isConfigurationEqual = (conf1, conf2) => Object.keys(conf1)
          .concat(Object.keys(conf2))
          .every(key => conf1[key] === conf2[key]);

        module.exports.handler = async (event) => {
          console.log(JSON.stringify(event, null, 2));

          const replicaUpdates = [];

          if (typeof event.ResourceProperties.Replicas === 'object') {
            delete event.ResourceProperties.Replicas[process.env.AWS_REGION];
          } else {
            return sendResponse(event, 'FAILED', 'Replicas property must be a map of region names to replica configurations');
          }

          if (event.RequestType === 'Create') {
            for (const [region, configuration] of Object.entries(event.ResourceProperties.Replicas)) {
              replicaUpdates.push({
                Create: {
                  RegionName: region,
                  ...configuration,
                }
              });
            }
          } else if (event.RequestType === 'Update') {
            if (typeof event.OldResourceProperties.Replicas === 'object') {
              delete event.OldResourceProperties.Replicas[process.env.AWS_REGION];
            }

            for (const [region, configuration] of Object.entries(event.ResourceProperties.Replicas)) {
              if (region in event.OldResourceProperties.Replicas) {
                if (!isConfigurationEqual(configuration, event.OldResourceProperties.Replicas[region])) {
                  replicaUpdates.push({
                    Update: {
                      RegionName: region,
                      ...configuration,
                    }
                  });
                }
              } else {
                replicaUpdates.push({
                  Create: {
                    RegionName: region,
                    ...configuration,
                  }
                });
              }
            }

            for (const region in event.OldResourceProperties.Replicas) {
              if (!(region in event.ResourceProperties.Replicas)) {
                replicaUpdates.push({
                  Delete: {
                    RegionName: region,
                  }
                });
              }
            }
          } else if (event.RequestType === 'Delete') {
            for (const region in event.ResourceProperties.Replicas) {
              replicaUpdates.push({
                Delete: {
                  RegionName: region,
                }
              });
            }
          }

          console.log('Replica Updates: ' + JSON.stringify(replicaUpdates, null, 2));

          if (replicaUpdates.length === 0) {
            return sendResponse(event, 'SUCCESS');
          }

          try {
            const params = {
              TableName: process.env.ACCOUNTS_GLOBAL_TABLE_NAME,
              ReplicaUpdates: replicaUpdates,
            };

            const command = new UpdateTableCommand(params);
            await client.send(command);

            console.log('Table updated successfully');

            return sendResponse(event, 'SUCCESS');
          } catch (error) {
            console.error('Table update failed');
            console.error(error);
            return sendResponse(event, 'FAILED', error.message);
          }
        };

        const sendResponse = (event, status, reason) => {
          const responseBody = JSON.stringify({
            Status: status,
            Reason: reason || `See CloudWatch Log Stream: ${process.env.AWS_LAMBDA_LOG_STREAM_NAME}`,
            PhysicalResourceId: event.PhysicalResourceId || process.env.ACCOUNTS_GLOBAL_TABLE_NAME,
            StackId: event.StackId,
            RequestId: event.RequestId,
            LogicalResourceId: event.LogicalResourceId,
          });

          const options = {
            method: 'PUT',
            headers: {
              'Content-Type': '',
              'Content-Length': responseBody.length,
            },
          };

          return new Promise((resolve, reject) => {
            const request = https.request(event.ResponseURL, options, response => {
              console.log(`CloudFormation Response status code: ${response.statusCode}`);

              response.on('data', () => {});
              response.on('end', resolve);
            });

            request.on('error', reject);
            request.write(responseBody);
            request.end();
          });
        };
      Policies:
        - Statement:
            - Effect: Allow
              Action: iam:CreateServiceLinkedRole
              Resource: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/replication.dynamodb.amazonaws.com/AWSServiceRoleForDynamoDBReplication
            - Effect: Allow
              Action: dynamodb:UpdateTable
              Resource: !GetAtt AccountsGlobalTable.Arn
            - Effect: Allow
              Action:
                - dynamodb:BatchWriteItem
                - dynamodb:CreateTable
                - dynamodb:CreateTableReplica
                - dynamodb:DeleteItem
                - dynamodb:DeleteTable
                - dynamodb:DeleteTableReplica
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:Query
                - dynamodb:Scan
                - dynamodb:UpdateItem
                - dynamodb:UpdateTimeToLive
              Resource: !Sub arn:${AWS::Partition}:dynamodb:*:${AWS::AccountId}:table/${AccountsGlobalTable}
            - Effect: Allow
              Action:
                - kms:CreateGrant
                - kms:Decrypt
                - kms:DescribeKey
                - kms:Encrypt
                - kms:RevokeGrant
              Resource: "*"
              Condition:
                StringEquals:
                  aws:CalledViaLast: !Sub dynamodb.${AWS::URLSuffix}
      Runtime: nodejs22.x
      Timeout: 29
      Tracing: Active

  AccountsReplicaTableCustomResourceHandlerLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AccountsReplicaTableCustomResourceHandler}

  AccountsReplicaTables:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt AccountsReplicaTableCustomResourceHandler.Arn
      ServiceTimeout: 30
      Replicas:
        Fn::ForEach::AccountsTableReplicaRegion:
          - Region
          - !Ref CustomerDataRegions
          - ${Region}:
              KMSMasterKeyId: alias/ArchodexBackendCustomerDataKey

  APIRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub lambda.${AWS::URLSuffix}
            Action: sts:AssumeRole
          - Effect: Allow
            Principal:
              AWS: !Ref AWS::AccountId
            Action: sts:AssumeRole
            Condition:
              ArnLike:
                aws:PrincipalArn: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/us-west-2/AWSReservedSSO_AdministratorAccess_*
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AWSXrayWriteOnlyAccess
      Policies:
        - PolicyName: GetCognitoUserAttributes
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: cognito-idp:AdminGetUser
                Resource: !GetAtt CognitoUserPool.Arn
        - PolicyName: ReadWriteAccountAndCustomerTables
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:ConditionCheckItem
                  - dynamodb:DeleteItem
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                Resource:
                  - !Sub arn:${AWS::Partition}:dynamodb:*:${AWS::AccountId}:table/${AccountsGlobalTable}
                  - !Sub arn:${AWS::Partition}:dynamodb:*:*:table/archodex-service-data-*
                Condition:
                  ForAnyValue:StringEquals:
                    aws:ResourceOrgPaths:
                      - !Sub ${EnvironmentOrganizationPath}/
                      - !Sub ${EnvironmentOrganizationPath}/${CustomerDataOUId}/
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:DescribeKey
                  - kms:Encrypt
                Resource: "*"
                Condition:
                  ForAnyValue:StringEquals:
                    kms:ResourceAliases: alias/ArchodexBackendCustomerDataKey
                  StringEquals:
                    aws:CalledViaLast: !Sub dynamodb.${AWS::URLSuffix}
        - PolicyName: DeleteCustomerTables
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:DeleteTable
                  - dynamodb:UpdateTable
                Resource: !Sub arn:${AWS::Partition}:dynamodb:*:*:table/archodex-service-data-*
                Condition:
                  ForAnyValue:StringEquals:
                    aws:ResourceOrgPaths: !Sub ${EnvironmentOrganizationPath}/${CustomerDataOUId}/
        - PolicyName: ListCustomerDataAccounts
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: organizations:ListAccountsForParent
                Resource: !Sub arn:${AWS::Partition}:organizations::*:ou/*/${CustomerDataOUId}
        - PolicyName: GetCustomerDataAccountTableCounts
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: cloudwatch:GetMetricData
                Resource: "*"
        - PolicyName: AssumeBackendAPICustomerDataManagementRole
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: sts:AssumeRole
                Resource: !Sub arn:${AWS::Partition}:iam::*:role/BackendAPICustomerDataManagementRole
                Condition:
                  ForAnyValue:StringEquals:
                    aws:ResourceOrgPaths: !Sub ${EnvironmentOrganizationPath}/${CustomerDataOUId}/
        - PolicyName: UseAPIKeyCustomerDataKey
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: ssm:GetParameter
                Resource: !Sub arn:${AWS::Partition}:ssm:*:${AWS::AccountId}:parameter/api_key_customer_data_key
              - Effect: Allow
                Action: kms:Decrypt
                Resource: "*"
                Condition:
                  ForAnyValue:StringEquals:
                    kms:ResourceAliases: alias/ArchodexBackendCustomerDataKey
                  StringEquals:
                    kms:EncryptionContext:Purpose: APIKeys
                  ForAllValues:StringEquals:
                    kms:EncryptionContextKeys: Purpose
      RoleName: ArchodexBackendAPIRole

  RegionalBackendsStackSetExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: RegionalBackendsStackSetExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref AWS::AccountId
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ManageStacks
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:CancelUpdateStack
                  - cloudformation:ContinueUpdateRollback
                  - cloudformation:CreateChangeSet
                  - cloudformation:CreateStack
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:RollbackStack
                  - cloudformation:TagResource
                  - cloudformation:UntagResource
                  - cloudformation:UpdateStack
                Resource:
                  - !Sub arn:${AWS::Partition}:cloudformation:*:${AWS::AccountId}:stack/StackSet-${AWS::StackName}-regional-backends-*
                  - !Sub arn:${AWS::Partition}:cloudformation:*:aws:transform/Serverless-2016-10-31
        - PolicyName: UseCustomerDataKMSKey
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - kms:CreateGrant
                  - kms:RevokeGrant
                Resource: "*"
                Condition:
                  Bool:
                    kms:GrantIsForAWSResource: true
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:DescribeKey
                  - kms:Encrypt
                Resource: "*"
                Condition:
                  StringEquals:
                    kms:RequestAlias: alias/ArchodexBackendCustomerDataKey
        - PolicyName: ManageAPIFunction
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - lambda:AddPermission
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:GetPolicy
                  - lambda:ListTags
                  - lambda:RemovePermission
                  - lambda:TagResource
                  - lambda:UntagResource
                  - lambda:UpdateFunctionCode
                  - lambda:UpdateFunctionConfiguration
                Resource: !Sub arn:${AWS::Partition}:lambda:*:${AWS::AccountId}:function:archodex-backend-api
              - Effect: Allow
                Action: s3:GetObject
                Resource: !Sub arn:${AWS::Partition}:s3:::cloudformation-deployment-assets-${AWS::AccountId}-*/backend/api/bootstrap-*.zip
              - Effect: Allow
                Action: iam:PassRole
                Resource: !GetAtt APIRole.Arn
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:DeleteLogGroup
                  - logs:DeleteRetentionPolicy
                  - logs:PutRetentionPolicy
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:*:${AWS::AccountId}:log-group:/aws/lambda/archodex-backend-api
                  - !Sub arn:${AWS::Partition}:logs:*:${AWS::AccountId}:log-group:/aws/lambda/archodex-backend-api:*
        - PolicyName: ManageAPIACMCertificate
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - acm:AddTagsToCertificate
                  - acm:DeleteCertificate
                  - acm:DescribeCertificate
                  - acm:ListTagsForCertificate
                  - acm:RemoveTagsFromCertificate
                  - acm:RequestCertificate
                  - acm:UpdateCertificateOptions
                Resource: "*"
                Condition:
                  ForAllValues:StringLike:
                    acm:DomainNames: api.*.{{resolve:ssm:/account_subdomain/domain}}
        - PolicyName: ManageAPIRoute53Records
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: ManageACMDNSVerificationRecords
                Effect: Allow
                Action: route53:ChangeResourceRecordSets
                Resource: !Sub arn:${AWS::Partition}:route53:::hostedzone/{{resolve:ssm:/account_subdomain/hosted_zone_id}}
                Condition:
                  ForAllValues:StringLike:
                    route53:ResourceRecordSet: "*.api.*.{{resolve:ssm:/account_subdomain/domain}}"
                  ForAllValues:StringEquals:
                    route53:ResourceRecordSetType: CNAME
              - Sid: GetHostedZoneForAPIGatewayDomain
                Effect: Allow
                Action: route53:GetHostedZone
                Resource: !Sub arn:${AWS::Partition}:route53:::hostedzone/{{resolve:ssm:/account_subdomain/hosted_zone_id}}
              - Sid: GetChangeStatusForAPIGatewayDomain
                Effect: Allow
                Action: route53:GetChange
                Resource: !Sub arn:${AWS::Partition}:route53:::change/*
              - Sid: ManageAPICustomDomainRecords
                Effect: Allow
                Action: route53:ChangeResourceRecordSets
                Resource: !Sub arn:${AWS::Partition}:route53:::hostedzone/{{resolve:ssm:/account_subdomain/hosted_zone_id}}
                Condition:
                  ForAllValues:StringLike:
                    route53:ResourceRecordSet: "api.*.{{resolve:ssm:/account_subdomain/domain}}"
                  ForAllValues:StringEquals:
                    route53:ResourceRecordSetType: A
        - PolicyName: ManageApiGateway
          PolicyDocument:
            Version: "2012-10-17"
            # REST APIs are impossible to scope permissions for, so we have to allow all actions
            Statement:
              - Effect: Allow
                Action: iam:CreateServiceLinkedRole
                Resource: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/ops.apigateway.amazonaws.com/AWSServiceRoleForAPIGateway
              - Effect: Allow
                Action: apigateway:*
                Resource: "*"

  RegionalBackendsStackSetAdministrationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: RegionalBackendsStackSetAdministrationRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub cloudformation.${AWS::URLSuffix}
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
              StringLike:
                aws:SourceArn: !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stackset/${AWS::StackName}-regional-backends:*
      Policies:
        - PolicyName: ExecuteStackSet
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: sts:AssumeRole
                Resource: !GetAtt RegionalBackendsStackSetExecutionRole.Arn

  RegionalBackendsStacks:
    Type: AWS::CloudFormation::StackSet
    Properties:
      AdministrationRoleARN: !GetAtt RegionalBackendsStackSetAdministrationRole.Arn
      Capabilities:
        - CAPABILITY_AUTO_EXPAND
      ExecutionRoleName: !Ref RegionalBackendsStackSetExecutionRole
      ManagedExecution:
        Active: true
      OperationPreferences:
        FailureToleranceCount: 0
        MaxConcurrentCount: 1
        RegionConcurrencyType: PARALLEL
      Parameters:
        - ParameterKey: Domain
          ParameterValue: "{{resolve:ssm:/account_subdomain/domain}}"
        - ParameterKey: HostedZoneId
          ParameterValue: "{{resolve:ssm:/account_subdomain/hosted_zone_id}}"
        - ParameterKey: APIRoleArn
          ParameterValue: !GetAtt APIRole.Arn
        - ParameterKey: APIBootstrapMD5Sum
          ParameterValue: !Ref APIBootstrapMD5Sum
        - ParameterKey: CognitoUserPoolId
          ParameterValue: !Ref CognitoUserPool
        - ParameterKey: CognitoUserPoolAppClientId
          ParameterValue: !Ref CognitoUserPoolAppClient
        - ParameterKey: CognitoRefreshTokenValidityInDays
          ParameterValue: !FindInMap
            - Constants
            - Auth
            - RefreshTokenValidityInDays
        - ParameterKey: CustomerDataOUId
          ParameterValue: !Ref CustomerDataOUId
      PermissionModel: SELF_MANAGED
      StackInstancesGroup:
        - DeploymentTargets:
            Accounts:
              - !Ref AWS::AccountId
          Regions: !Ref CustomerDataRegions
      StackSetName: !Sub ${AWS::StackName}-regional-backends
      TemplateBody: |-
        Transform: AWS::Serverless-2016-10-31

        Parameters:
          Domain:
            Type: String
            Description: Archodex environment domain name
          HostedZoneId:
            Type: String
            Description: Archodex environment Route53 Hosted Zone ID
          APIRoleArn:
            Type: String
            Description: API Lambda Function IAM Role ARN
          APIBootstrapMD5Sum:
            Type: String
            Description: MD5 checksum of the Lambda API function zip package
          CognitoUserPoolId:
            Type: String
            Description: Cognito User Pool ID
          CognitoUserPoolAppClientId:
            Type: String
            Description: Cognito User Pool App Client ID
          CognitoRefreshTokenValidityInDays:
            Type: Number
            Description: Number of days a refresh token is valid for
          CustomerDataOUId:
            Type: String
            Description: Organizational Unit ID for customer data accounts

        Resources:
          API:
            Type: AWS::Lambda::Function
            Properties:
              Architectures:
                - arm64
              Code:
                S3Bucket: !Sub cloudformation-deployment-assets-${AWS::AccountId}-${AWS::Region}
                S3Key: !Sub backend/api/bootstrap-${APIBootstrapMD5Sum}.zip
              FunctionName: archodex-backend-api
              Environment:
                Variables:
                  AWS_PARTITION: !Ref AWS::Partition
                  AWS_ACCOUNT_ID: !Ref AWS::AccountId
                  ENDPOINT: !Sub https://api.${AWS::Region}.${Domain}
                  COGNITO_AUTH_ENDPOINT: !Sub https://auth.${Domain}
                  COGNITO_USER_POOL_ID: !Ref CognitoUserPoolId
                  COGNITO_CLIENT_ID: !Ref CognitoUserPoolAppClientId
                  COGNITO_REDIRECT_URI: !Sub https://api.${AWS::Region}.${Domain}/oauth2/idpresponse
                  COGNITO_REFRESH_TOKEN_VALIDITY_IN_DAYS: !Ref CognitoRefreshTokenValidityInDays
                  COGNITO_ISSUER_ENDPOINT: !Sub https://cognito-idp.${AWS::Region}.${AWS::URLSuffix}
                  APP_REDIRECT_URI: !Sub https://app.${Domain}/oauth2/idpresponse
                  CUSTOMER_DATA_OU_ID: !Ref CustomerDataOUId
              Handler: bootstrap
              MemorySize: 3008
              Role: !Ref APIRoleArn
              Runtime: provided.al2023
              Timeout: 30
              TracingConfig:
                Mode: Active
          
          APIRESTAPIANYproxyPermissionProd:
            Type: AWS::Lambda::Permission
            Properties:
              Action: lambda:InvokeFunction
              FunctionName: !Ref API
              Principal: !Sub apigateway.${AWS::URLSuffix}
              SourceArn: !Sub arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${RESTAPI}/Prod/*/*
          
          APILogGroup:
            Type: AWS::Logs::LogGroup
            DeletionPolicy: Retain
            Properties:
              LogGroupName: !Sub /aws/lambda/${API}
              RetentionInDays: 30

          RESTAPICertificate:
            Type: AWS::CertificateManager::Certificate
            Properties:
              DomainName: !Sub api.${AWS::Region}.${Domain}
              ValidationMethod: DNS
              DomainValidationOptions:
                - DomainName: !Sub api.${AWS::Region}.${Domain}
                  HostedZoneId: !Ref HostedZoneId

          RESTAPI:
            Type: AWS::Serverless::Api
            Properties:
              Name: archodex-backend-api
              StageName: Prod
              DefinitionBody:
                openapi: 3.0.1
                info:
                  title: archodex-backend-api
                  version: 1
                servers:
                  - url: !Sub https://api.${AWS::Region}.${Domain}
                    x-amazon-apigateway-endpoint-configuration:
                      disableExecuteApiEndpoint: true
                paths:
                  /{proxy+}:
                    x-amazon-apigateway-any-method:
                      x-amazon-apigateway-integration:
                        httpMethod: POST
                        type: aws_proxy
                        uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${API.Arn}/invocations
                      responses: {}
              DisableExecuteApiEndpoint: true
              Domain:
                DomainName: !Sub api.${AWS::Region}.${Domain}
                CertificateArn: !Ref RESTAPICertificate
                Route53:
                  HostedZoneId: !Ref HostedZoneId
              EndpointConfiguration: REGIONAL
              FailOnWarnings: true
              TracingEnabled: true

  FrontendAssetsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-frontend-assets-${AWS::AccountId}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  FrontendAssetsBucketPolicyRequireEncryptionInTransit:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendAssetsBucket
      PolicyDocument:
        Id: RequireEncryptionInTransit
        Version: "2012-10-17"
        Statement:
          - Principal: "*"
            Action: "*"
            Effect: Deny
            Resource:
              - !GetAtt FrontendAssetsBucket.Arn
              - !Sub ${FrontendAssetsBucket.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: "false"

  FrontendAssetsBucketOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub ${AWS::StackName}-frontend-assets-access-control
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  FrontendDomainCertificateParameterValue:
    DependsOn: CrossRegionArchodexEnvironmentStacks
    Type: Custom::ParameterValue
    Properties:
      ServiceToken: "{{resolve:ssm:/parameter_value_custom_resource_service_token}}"
      ServiceTimeout: 5
      ParameterName: !Sub /${AWS::StackName}/frontend_domain_certificate

  FrontendHTMLResponseHeaderPolicy:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        Name: !Sub ${AWS::StackName}-html
        CustomHeadersConfig:
          Items:
            - Header: Cache-Control
              Override: true
              Value: no-store
        SecurityHeadersConfig:
          ContentSecurityPolicy:
            ContentSecurityPolicy: default-src 'self'; connect-src https://*.{{resolve:ssm:/account_subdomain/domain}}; img-src 'self' https://cdn.jsdelivr.net/npm/aws-svg-icons@3.0.0-2021-07-30/ https://cdn.jsdelivr.net/npm/lucide-static@0.471.0/ https://cdn.jsdelivr.net/npm/simple-icons@v14/; object-src 'none'; base-uri 'none'; frame-ancestors 'none'; form-action 'none';
            Override: true
          ContentTypeOptions:
            Override: true
          ReferrerPolicy:
            Override: true
            ReferrerPolicy: no-referrer
          StrictTransportSecurity:
            AccessControlMaxAgeSec: 63072000
            IncludeSubdomains: true
            Override: true
            Preload: true

  FrontendAssetsResponseHeaderPolicy:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        Name: !Sub ${AWS::StackName}-assets
        SecurityHeadersConfig:
          ContentTypeOptions:
            Override: true
          ReferrerPolicy:
            Override: true
            ReferrerPolicy: no-referrer
          StrictTransportSecurity:
            AccessControlMaxAgeSec: 63072000
            IncludeSubdomains: true
            Override: true
            Preload: true

  FrontendCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - app.{{resolve:ssm:/account_subdomain/domain}}
        CacheBehaviors:
          - AllowedMethods:
              - HEAD
              - GET
            CachedMethods:
              - HEAD
              - GET
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # CachingDisabled
            Compress: true
            PathPattern: index.html
            ResponseHeadersPolicyId: !Ref FrontendHTMLResponseHeaderPolicy
            TargetOriginId: FrontendAssetsBucket
            ViewerProtocolPolicy: redirect-to-https
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - HEAD
            - GET
          CachedMethods:
            - HEAD
            - GET
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # CachingOptimized
          Compress: true
          ResponseHeadersPolicyId: !Ref FrontendAssetsResponseHeaderPolicy
          TargetOriginId: FrontendAssetsBucket
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2and3
        IPV6Enabled: true
        Origins:
          - Id: FrontendAssetsBucket
            DomainName: !GetAtt FrontendAssetsBucket.RegionalDomainName
            OriginAccessControlId: !GetAtt FrontendAssetsBucketOriginAccessControl.Id
            S3OriginConfig:
              OriginAccessIdentity: ""
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref FrontendDomainCertificateParameterValue
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only

  FrontendAssetsBucketPolicyCloudFrontAccess:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendAssetsBucket
      PolicyDocument:
        Id: CloudFrontAccess
        Version: "2012-10-17"
        Statement:
          - Principal:
              Service: !Sub cloudfront.${AWS::URLSuffix}
            Action: s3:GetObject
            Effect: Allow
            Resource: !Sub ${FrontendAssetsBucket.Arn}/*
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:${AWS::Partition}:cloudfront::${AWS::AccountId}:distribution/${FrontendCloudFrontDistribution.Id}

  FrontendDNSRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: "{{resolve:ssm:/account_subdomain/hosted_zone_id}}"
      RecordSets:
        - Name: app.{{resolve:ssm:/account_subdomain/domain}}
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2 # Special CloudFront-specific ID
            DNSName: !GetAtt FrontendCloudFrontDistribution.DomainName
        - Name: app.{{resolve:ssm:/account_subdomain/domain}}
          Type: AAAA
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2 # Special CloudFront-specific ID
            DNSName: !GetAtt FrontendCloudFrontDistribution.DomainName
